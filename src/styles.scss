@use '@angular/material' as mat;

@import '~codemirror/lib/codemirror';
@import '~codemirror/theme/material';

@include mat.core();

$angular-primary: mat.define-palette(mat.$yellow-palette, 700);
$angular-accent: mat.define-palette(mat.$orange-palette, 500);

$angular-warn: mat.define-palette(mat.$teal-palette);

$my-primary: mat.define-palette(mat.$indigo-palette, 500);
$my-accent: mat.define-palette(mat.$pink-palette, A200, A100, A400);

$my-theme: mat.define-light-theme(
    (
        color: (
            primary: $my-primary,
            accent: $my-accent,
        ),
    )
);

$angular-dark-theme: mat.define-dark-theme(
    (
        color: (
            primary: $angular-primary,
            accent: $angular-accent,
            warn: $angular-warn,
        ),
    )
);

.darkMode {
    @include mat.all-component-colors($angular-dark-theme);
}

// Emit theme-dependent styles for common features used across multiple components.
@include mat.core-theme($my-theme);

// Emit styles for MatButton based on `$my-theme`. Because the configuration
// passed to `define-light-theme` omits typography, `button-theme` will not
// emit any typography styles.
@include mat.button-theme($my-theme);

/* You can add global styles to this file, and also import other style files */
body {
    //user-select: none;
    margin: 0;
}

label {
    user-select: all;
}

html,
body {
    height: 100%;
}
body {
    margin: 0;
    font-family: Roboto, 'Helvetica Neue', sans-serif;
}

.custom-pannel {
    @media only screen and (max-width: 768px) {
        max-width: 100vw;
        width: 100vw;
    }

    @media only screen and (min-width: 768px) {
        max-width: 80vw;
        width: 1024px;
    }
    min-height: 90vh;
    min-height: 90vh;
    overflow-y: hidden;
}

.custom-pannel > mat-dialog-container {
    padding: 0;
    overflow-y: hidden !important;
    min-height: 90vh;
    min-height: -webkit-fill-available;
}
